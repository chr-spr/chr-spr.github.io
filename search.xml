<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022-09-13/hello-world6f420f83924c.html"/>
      <url>/2022-09-13/hello-world6f420f83924c.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Apollo安装</title>
      <link href="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a.html"/>
      <url>/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a.html</url>
      
        <content type="html"><![CDATA[<h2 id="Apollo环境搭建">Apollo环境搭建</h2><h3 id="1-0-安装-Ubuntu-系统">1.0 安装 Ubuntu 系统</h3><p>官方推荐安装<a href="https://old-releases.ubuntu.com/releases/18.04.5/">Ubuntu 18.04.5 LTS (Bionic Beaver)</a>，其他版本也可以。因此，推荐您使用 Ubuntu 18.04.5+（包括 Ubuntu 20.04）作为主机的操作系统。关于 VMWare 虚拟机的安装配置可以参考此前的文章：</p><blockquote><p><a href="https://chr-spr.xyz/2022/04/26/Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/">Ubuntu虚拟机安装</a></p></blockquote><h3 id="1-1-更新和升级">1.1 更新和升级</h3><p>虚拟机系统安装完成后，更换软件源以获取更快的下载速度.</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/source.png" class=""><p>进行更新和升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade</span><br></pre></td></tr></table></figure><h3 id="1-2-安装-NVIDIA-GPU-驱动（可选）">1.2 安装 NVIDIA GPU 驱动（可选）</h3><p>如果是在物理机中安装的 Ubuntu，且机器配有 NVIDIA 显卡，需要安装对应驱动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-add-repository multiverse</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nvidia-driver-455</span><br></pre></td></tr></table></figure><p>随后，可以通过在终端中执行 <code>nvidia-smi</code> 命令来查看 NVIDIA 显卡工作是否正常（完成驱动安装后可能需要重启），正常情况下终端将显示下面的信息：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/nvidia-1.png" class=""><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/nvidia-2.png" class=""><blockquote><p>注意： 如果是在虚拟机中安装的 Ubuntu 或物理机没有配置 NVIDIA 显卡，此步务必跳过，否则将导致后续步骤中启动 Apollo 开发容器时失败。虚拟机情况下这样做的根本原因是，虚拟机中无法虚拟 NVIDIA 显卡。</p></blockquote><h3 id="1-3-安装-Docker-引擎">1.3 安装 Docker 引擎</h3><p>在终端中直接执行下述命令即可完成 Docker 社区版的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://get.docker.com | sh</span><br><span class="line">sudo systemctl start docker &amp;&amp; sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p>重启 Docker 守护进程以使改动生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>完成 Docker 安装后，在终端中执行下述命令并重启系统，这样可以免去每次执行 Docker 命令时需要添加 sudo 的繁琐：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">sudo usermod -aG docker your_username</span><br></pre></td></tr></table></figure><h3 id="1-4-安装-NVIDIA-容器工具包">1.4 安装 NVIDIA 容器工具包</h3><p>如果是在物理机中安装的 Ubuntu，且机器配有 NVIDIA 显卡，在安装了驱动的前提下，还需要安装 NVIDIA 容器工具包以运行 Apollo Docker 镜像中的 CUDA：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">distribution=$(. /etc/os-release;<span class="built_in">echo</span> $ID<span class="variable">$VERSION_ID</span>)</span><br><span class="line">curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -</span><br><span class="line">curl -s -L https://nvidia.github.io/nvidia-docker/<span class="variable">$distribution</span>/nvidia-docker.list | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/nvidia-docker.list</span><br><span class="line">sudo apt-get -y update</span><br><span class="line">sudo apt-get install -y nvidia-docker2</span><br></pre></td></tr></table></figure><blockquote><p>注意： 如果是在虚拟机中安装的 Ubuntu 或物理机没有配置 NVIDIA 显卡，此步同样需要跳过。</p></blockquote><h3 id="2-0-克隆-Apollo-源码">2.0 克隆 Apollo 源码</h3><p>通过SSH方式或HTTPS方式克隆Apollo源码仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 SSH 的方式</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:ApolloAuto/apollo.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 HTTPS 的方式</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ApolloAuto/apollo.git</span><br></pre></td></tr></table></figure><p>GitHub 在国内访问速度可能很慢，可以使用 Gitee 替代：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 SSH 的方式</span></span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com:ApolloAuto/apollo.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 HTTPS 的方式</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/ApolloAuto/apollo.git</span><br></pre></td></tr></table></figure><h3 id="3-0-启动-Apollo-Docker-开发容器">3.0 启动 Apollo Docker 开发容器</h3><p>进入到 Apollo 源码根目录，打开终端，执行下述命令以启动 Apollo Docker 开发容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./docker/scripts/dev_start.sh</span><br></pre></td></tr></table></figure><p>启动成功后将得到下面信息：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/start_ok.png" class=""><p>如果是在虚拟机中安装的 Ubuntu 或物理机没有配置 NVIDIA 显卡，但却又安装了 NVIDIA 驱动，则在执行上述启动容器的操作时将遇到下面的报错：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/start_nok.png" class=""><p>解决方法是直接卸载 NVIDIA 相关安装项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge nvidia*</span><br></pre></td></tr></table></figure><h3 id="4-0-进入-Apollo-Docker-开发容器">4.0 进入 Apollo Docker 开发容器</h3><p>启动 Apollo Docker 开发容器后，执行下述命令进入容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./docker/scripts/dev_into.sh</span><br></pre></td></tr></table></figure><p>进入容器后终端信息发生了相应变化，后面的操作都将在容器中进行：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/into.png" class=""><blockquote><p>在 VMWare 虚拟机中进行的上述所有步骤，所以会看到上面黄色的 WARNING 信息。</p></blockquote><h3 id="5-0-在容器中构建-Apollo（首次需构建）">5.0 在容器中构建 Apollo（首次需构建）</h3><p>进入 Apollo Docker 开发容器后，在容器终端中执行下述命令构建 Apollo：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./apollo.sh build</span><br></pre></td></tr></table></figure><p>构建成功后将得到下面的信息：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/build.png" class=""><blockquote><p>如果报无权限创建目录的问题，在命令前加 sudo 即可。</p></blockquote><h3 id="6-0-运行-Apollo">6.0 运行 Apollo</h3><h3 id="6-1-启动-Apollo">6.1 启动 Apollo</h3><p>完成 Apollo 构建后，在容器终端中执行下述命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./scripts/bootstrap.sh start</span><br></pre></td></tr></table></figure><p>上述命令会启动 DreamView 并使能模块监控机制，在浏览器中访问 <a href="http://localhost:8888">http://localhost:8888</a> 来显示 DreamView 界面：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/Apollo.png" class=""><h3 id="6-2-选择驾驶模式和地图">6.2 选择驾驶模式和地图</h3><p>在 DreamView 界面的对应下拉框中选择驾驶模式为“Mkz Standard Debug”，选择地图为“Sunnyvale with Two Offices”：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/map.png" class=""><h3 id="6-3-回放-Demo-数据">6.3 回放 Demo 数据</h3><p>在容器终端中执行下述命令下载 demo 数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd docs/demo_guide/</span><br><span class="line">python3 record_helper.py demo_3.5.record</span><br></pre></td></tr></table></figure><p>由于网络原因，下载可能失败，可以点击<a href="https://blog.shipengx.com/download/demo_3.5.record">这里</a>手动下载并将数据放到 apollo/docs/demo_guide/ 目录下。继续在容器终端中执行下述命令来播放数据，-l 表示循环播放（loop）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cyber_recorder play -f demo_3.5.record -l</span><br></pre></td></tr></table></figure><p>至此，DreamView 界面中将呈现出自车规划轨迹、他车预测轨迹、路网等各种信息：</p><img src="/2022-04-28/Apollo%E5%AE%89%E8%A3%85f0705ae4aa3a/huifang.jpg" class=""><blockquote><p>本文参考：<br><a href="https://apollo.auto/document_cn.html?target=/Apollo-Homepage-Document/Apollo_Doc_CN_6_0/">https://apollo.auto</a><br><a href="https://zhuanlan.zhihu.com/p/392835156">https://zhuanlan.zhihu.com/p/392835156</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Apollo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu虚拟机安装</title>
      <link href="/2022-04-26/Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85b20f626e83e9.html"/>
      <url>/2022-04-26/Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85b20f626e83e9.html</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu-安装">Ubuntu 安装</h2><h3 id="下载镜像">下载镜像</h3><p>镜像名称：ubuntu-22.04-desktop-amd64.iso</p><ul><li>官方下载地址<br><a href="https://ubuntu.com/download/desktop">https://ubuntu.com/download/desktop</a></li><li>中国官网下载<br><a href="https://cn.ubuntu.com/download/desktop">https://cn.ubuntu.com/download/desktop</a></li><li>阿里镜像站点<br><a href="https://mirrors.aliyun.com/ubuntu-releases/22.04/">https://mirrors.aliyun.com/ubuntu-releases/22.04/</a></li><li>腾讯镜像站点<br><a href="https://mirrors.cloud.tencent.com/ubuntu-releases/22.04/">https://mirrors.cloud.tencent.com/ubuntu-releases/22.04/</a></li><li>清华大学镜像站点<br><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04/</a></li></ul><h3 id="安装步骤">安装步骤</h3><p>VMware版本:VMware-Workstation-Full-16.2.3-19376536</p><ul><li>Workstation 16 Pro for Windows<br><a href="https://www.vmware.com/go/getworkstation-win">https://www.vmware.com/go/getworkstation-win</a></li><li>Workstation 16 Pro for Linux<br><a href="https://www.vmware.com/go/getworkstation-linux">https://www.vmware.com/go/getworkstation-linux</a></li></ul><h3 id="创建虚拟机">创建虚拟机</h3><p>文件 &gt;&gt; 新建虚拟机 &gt;&gt; 自定义(高级) &gt;&gt; 硬件兼容性 [Workstation 16.2.x] &gt;&gt; 稍后安装操作系统 &gt;&gt; Linux [Ubuntu 64 位] &gt;&gt; 设置虚拟机名称和位置 &gt;&gt; 配置处理器 &gt;&gt; 配置虚拟机内存 &gt;&gt; 使用桥接网络 &gt;&gt; LSI Logic &gt;&gt; SCSI &gt;&gt; 创建新虚拟磁盘 &gt;&gt; 配置磁盘容量，选择将虚拟磁盘拆分成多个文件 &gt;&gt; 配置磁盘文件 &gt;&gt; 完成。</p><p>选择新创建的虚拟机 &gt;&gt; 编辑虚拟机设置 &gt;&gt; 选中 CD/DVD (SATA) &gt;&gt; 使用 ISO 映像文件，浏览选择下载的 iso &gt;&gt; 确定。</p><h3 id="安装-Ubuntu22-04-LTS">安装 Ubuntu22.04 LTS</h3><ol><li>开启虚拟机进入 GRUB 界面：选择 Try or Install Ubuntu（点击界面后，光标会被锁定到虚拟机内，Ctrl + Alt 释放）</li></ol><p><img src="https://img-blog.csdnimg.cn/98e206ea6fcd4b3db1d301894baed05b.png" alt=""></p><ol start="2"><li>进入安装界面后，可能窗口很小，显示不完整。可以在虚拟机内，执行 Ctrl + Alt + T，弹出终端窗口后使用命令 xrandr -s 1280x800 然后回车。</li></ol><blockquote><p>参考：<a href="https://blog.csdn.net/yinjian0924/article/details/123510254">https://blog.csdn.net/yinjian0924/article/details/123510254</a></p></blockquote><ol start="3"><li>Welcome 界面：来到这个界面，选择你的系统语言，滑动到底部选择中文，如果你英文好的话，选择英文也再好不过了，之后右侧选择 Install Ubuntu。</li></ol><p><img src="https://img-blog.csdnimg.cn/cd19306de204406eaf9d721692a34e7d.png" alt="English"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1NjEzNDA2LnBuZw?x-oss-process=image/format,png" alt="简体中文"></p><ol start="4"><li>键盘布局啥的默认就好了</li></ol><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1NjQ0MzY0LnBuZw?x-oss-process=image/format,png" alt="键盘布局选择"></p><p>根据你的需求吧，默认也可以。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1NzE0MzMzLnBuZw?x-oss-process=image/format,png" alt=""></p><p>磁盘分区小白默认，大佬自定义</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1NzQ0OTkxLnBuZw?x-oss-process=image/format,png" alt="磁盘分区"></p><p>接下来就是选择时区，设置用户名、主机名及账户密码，Continue 后，正式开始系统安装</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1ODQ1ODczLnBuZw?x-oss-process=image/format,pngv" alt=""></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTA1OTAyMzY5LnBuZw?x-oss-process=image/format,png" alt=""></p><p>到了最后一步了，这一步中间有个下载的过程，有耐心的等（不过我悄咪咪的说一句，非常非常慢），也可以点击旁边的跳过（skip），个人强烈推荐点跳过（中间时候跳过会亮就可以点了），如果你的界面有点不一样，点一下那一栏字就好了，只是被隐藏了而已。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTEwMjQ1MTk1LnBuZw?x-oss-process=image/format,png" alt=""></p><p>最后重启虚拟机哦，而不是物理机<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy56enp5dWFuLmNuL2ltYWdlLTIwMjAwNjI5MTEwMzA2NDQ1LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>本文参考：<br><a href="https://blog.csdn.net/Anhui_Chen/article/details/124357027">https://blog.csdn.net/Anhui_Chen/article/details/124357027</a><br><a href="https://blog.csdn.net/weixin_45877759/article/details/107017669">https://blog.csdn.net/weixin_45877759/article/details/107017669</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2022-02-12/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95fa1644474ce5.html"/>
      <url>/2022-02-12/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95fa1644474ce5.html</url>
      
        <content type="html"><![CDATA[<h1>Markdown标题语法</h1><p>要创建标题，请在单词或短语前面添加井号（<code>#</code>）。<code>#</code>的数量代表了标题的级别。例如，添加三个<code>#</code>表示创建一个三级标题（<code>&lt;h3&gt;</code>）（例如：<code>### My Header</code>）</p><h1>Markdown段落语法</h1><p>要创建段落，请使用空白行将一行或多行文本进行分割。</p><h1>Markdown换行语法</h1><p>在一行的末尾添加两个或多个空格，然后按回车键，即可创建一个换行（<code>&lt;br&gt;</code>）。</p><h1>Markdown强调语法</h1><p>通过将文本设置为粗体或斜体来强调其重要性。</p><h2 id="粗体（Bold）">粗体（Bold）</h2><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p><h2 id="粗体（Bold）用法最佳实践">粗体（Bold）用法最佳实践</h2><p>Markdown应用程序在如何处理单词或短语的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p><h2 id="斜体（ltalic）">斜体（ltalic）</h2><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><h2 id="斜体（ltalic）用法最佳实践">斜体（ltalic）用法最佳实践</h2><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><h2 id="粗体（Bold）和斜体（ltalic）">粗体（Bold）和斜体（ltalic）</h2><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><h2 id="粗体（Bold）和斜体（ltalic）用法最佳实践">粗体（Bold）和斜体（ltalic）用法最佳实践</h2><p>Markdown应用程序在处理单词或短语中间添加的下划线上并不一致。为了实践兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。</p><h1>Markdown引用语法</h1><p>要创建块引用，请在段落前添加一个<code>&gt;</code>符号。</p><h2 id="多个段落的块引用">多个段落的块引用</h2><p>块引用可以包含多个段落。为段落之间的空白行添加一个<code>&gt;</code>符号。</p><h2 id="嵌套块引用">嵌套块引用</h2><p>块引用可以嵌套。在要嵌套的段落前添加一个<code>&gt;&gt;</code>符号。</p><h2 id="带有其他元素的块引用">带有其他元素的块引用</h2><p>块引用可以包含其他Markdown格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p><h1>Markdown列表语法</h1><p>可以将多个条目组织成有序或无序的列表。</p><h2 id="有序列表">有序列表</h2><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字1起始。</p><h2 id="无序列表">无序列表</h2><p>要创建无序列表，请在每个列表项前面添加破折号（<code>-</code>）、星号（<code>*</code>）、或加号（<code>+</code>）。缩进一个或多个列表项可创建嵌套列表。</p><h1>Markdown代码语法</h1><p>要将单词或短语表示为代码，请将其包裹在反引号（`）中。</p><h2 id="转移反引号">转移反引号</h2><p>如果你要表示为代码的单词或短语中包含一个或多个反应号，则可以通过将单词或短语包裹在双反引号（`）中。</p><h2 id="代码块">代码块</h2><p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。<br>Note:要创建不用缩进的代码块，请使用围栏式代码块（fenced code blocks）</p><h1>Markdown分割线语法</h1><p>要创建分割线，请在单独一行上使用三个或多个星号（<code>***</code>）、破折号（<code>---</code>）或下划线（<code>___</code>），并且不能包含其他内容。</p><h2 id="分割线（Horizontal-Rule）用法最佳实践">分割线（Horizontal Rule）用法最佳实践</h2><p>为了兼容性，请在分割线的前后均添加空白行。</p><h1>Markdown链接语法</h1><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：<code>[超链接显示名](超链接地址&quot;超链接title&quot;)</code><br>对应的HTML代码：<code>&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt;</code></p><blockquote><p><code>这是一个链接[Markdown语法](https://markdown.com.cn)。</code><br>渲染效果如下：<br>这是一个链接<a href="https://markdown.com.cn">Markdown语法</a>。</p></blockquote><h2 id="给链接增加Title">给链接增加Title</h2><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p><h2 id="网址和Email地址">网址和Email地址</h2><p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p><h2 id="带格式化的链接">带格式化的链接</h2><p>强调链接，在链接语法前后增加星号。要将链接表示为代码，请在方括号中添加反引号。</p><h2 id="引用类型链接">引用类型链接</h2><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及储存在文件中其他位置的部分，以使文本已于阅读。</p><h3 id="链接的第一部分格式">链接的第一部分格式</h3><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p><h3 id="链接的第二部分格式">链接的第二部分格式</h3><p>引用类型链接的第二部分使用以下属性设置格式：</p><p>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。<br>链接的URL，可以选择将其括在尖括号中。<br>链接的可选标题，可以将其括在双引号，单引号或括号中。<br>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如未注或脚注）。</p><h2 id="链接最佳实践">链接最佳实践</h2><p>不同的Markdown应用程序处理URL中间的空格方式不一样。为了兼容性，请尽量使用%20代替空格。</p><h1>Markdown图片语法</h1><p>要添加图像，请使用感叹号（<code>!</code>），然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><p>插入图片Markdown语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)</code>。<br>对应的HTML代码：<code>&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; titlt=&quot;图片title&quot;&gt;</code></p><h2 id="链接图片">链接图片</h2><p>给图片增加链接，请将图像的Markdown括在括号中，然后将链接添加在圆括号中。</p><blockquote><p><code>[![沙漠中的岩石图片](/assets/img/shiprock.jpg &quot;Shiprock&quot;)](https://markdown.com.cn)</code></p></blockquote><h1>Markdown转义字符语法</h1><p>要显示原本用于格式化Markdown文档的字符，请在字符前面添加反斜杠字符\。</p><h1>Markdown内嵌HTML标签</h1><p>对于Markdown涵盖范围之外的标签，都可以直接在文件里面用HTML本身。如需使用HTML，奴需要额外标注这是HTML或是Markdown，只需HTML标签添加到Markdown文本中即可。</p><h2 id="行级内联标签">行级内联标签</h2><p>HTML 的行级內联标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的<code>&lt;a&gt;</code>或<code>&lt;img&gt;</code>标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p><p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。</p><h2 id="区块标签">区块标签</h2><p>区块元素——比如<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code>等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 <code>&lt;p&gt;</code> 标签。</p><p>请注意，Markdown语法在HTML区块标签中将不会被处理。例如：你无法在HTML区块内使用Markdown形式的<code>*强调*</code>。</p><h2 id="HTML用法最佳实践">HTML用法最佳实践</h2><p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持 HTML 标签的子集。</p><p>对于 HTML 的块级元素 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
